CREATE TABLE "EAT"."AD_QUERY_MASTER" 
   (	"AD_QUERY_MASTER_ID" NUMBER(19,0), 
	"CREATED" TIMESTAMP (6), 
	"ISACTIVE" VARCHAR2(255 CHAR), 
	"UPDATED" TIMESTAMP (6), 
	"VALUE" CLOB, 
	"NAME" VARCHAR2(255 CHAR), 
	"CREATEDBY" NUMBER(19,0), 
	"M_BPARTNER_ID" NUMBER(19,0), 
	"UPDATEDBY" NUMBER(19,0), 
	"CREATED_SESSION_ID" VARCHAR2(255 BYTE), 
	"UPDATED_SESSION_ID" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into EAT.AD_SYSCONFIG
SET DEFINE OFF;

create sequence AD_QUERY_MASTER_SEQ start with 1 increment by 1 nomaxvalue

INSERT INTO ad_query_master (ad_query_master_id,created,isactive,updated, 
value,
name,createdby, 
m_bpartner_id
) VALUES (
    1,
    SYSDATE,
    'Y',
    SYSDATE,
    'SELECT * from (select A.MONTH_DISPLAY, case when sum(C.amount) is null then 0 else sum(C.amount) end as amount ,  CASE WHEN A.MONTH_VALUE<4 THEN A.MONTH_VALUE+12 ELSE A.MONTH_VALUE END as MONTH_VALUE  from  WWV_FLOW_MONTHS_MONTH A  LEFT OUTER JOIN (select  to_char(B.created,'MONTH') as month ,amount   from T_PAYMENT B    where M_CHARGE_ID= @MChargeID@  and  created BETWEEN '@FromDate@'   and '@ToDate@' ) C ON ( UPPER(A.MONTH_DISPLAY) =UPPER(C.month))   group by A.MONTH_DISPLAY,A.MONTH_VALUE) D order by D.MONTH_VALUE asc ',
   
    'Query_For_Revenue_Graph',
    '1',
    '2'
);
INSERT INTO ad_query_master (ad_query_master_id,created,isactive,updated, 
value,
name,createdby, 
m_bpartner_id
) VALUES (
    2,
    SYSDATE,
    'Y',
    SYSDATE,
    'SELECT *  FROM(SELECT  SUM(K.SAVINGS),J.MONTH_DISPLAY, CASE WHEN J.MONTH_VALUE<4 THEN J.MONTH_VALUE+12 ELSE J.MONTH_VALUE END as MONTH_VALUE  FROM  WWV_FLOW_MONTHS_MONTH J   LEFT OUTER JOIN (SELECT  A.FDD_RATE_WITH_GST AS FIRST_BID,D.FDD_RATE_WITH_GST AS LAST_BID, C.ALLOCATED_QTY AS QTY, ((A.FDD_RATE_WITH_GST-D.FDD_RATE_WITH_GST)*C.ALLOCATED_QTY) AS SAVINGS, to_char(C.created,"MONTH") as mon FROM  T_PRICE_BID A  INNER JOIN T_ITEM_BID B ON (A.T_ITEM_BID_ID=B.T_ITEM_BID_ID) INNER JOIN T_WINNER_SELECTION C ON (C.T_ITEM_BID_ID=B.T_ITEM_BID_ID) INNER JOIN T_TEMP_PRICE_BID D ON (D.T_ITEM_BID_ID=C.T_ITEM_BID_ID) INNER JOIN T_TAHDR_MATERIAL F ON (F.T_TAHDR_MATERIAL_ID=B.T_TAHDR_MATERIAL_ID) INNER JOIN M_MATERIAL G ON (F.T_MATERIAL_ID=G.M_MATERIAL_ID) INNER JOIN T_TAHDR H ON (H.T_TAHDR_ID=C.T_TAHDR_ID) INNER JOIN M_DEPARTMENT I ON (I.M_DEPARTMENT_ID=H.M_DEPARTMENT_ID) WHERE  D.T_PRICE_BID_ID=(SELECT  MIN(E.T_PRICE_BID_ID)  FROM  T_TEMP_PRICE_BID E   WHERE E.T_ITEM_BID_ID=A.T_ITEM_BID_ID )  @MaterilaID@  @DepartmentID@ AND C.CREATED BETWEEN "@FromDate@" and "@ToDate@" ) K ON (UPPER(J.MONTH_DISPLAY)=UPPER(K.mon)) GROUP BY J.MONTH_DISPLAY,J.MONTH_VALUE ) ORDER BY MONTH_VALUE ASC',
   
    'Query_For_TotalSaving_Graph',
    '1',
    '2'
);

alter table M_TILE add workflow_tile VARCHAR2(255 CHAR);
alter table m_tile RENAME COLUMN workflow_tile to is_workflow;
update M_TILE set IS_WORKFLOW ='Y' where NAME='Final Scrutiny';
update M_TILE set IS_WORKFLOW ='Y' where NAME='Preliminary Scrutiny';
update M_TILE set IS_WORKFLOW ='Y' where NAME='Registration';
update M_TILE set IS_WORKFLOW ='Y' where NAME='Payment Approval';
update M_TILE set IS_WORKFLOW ='Y' where NAME='Auction Final Scrutiny';
update M_TILE set IS_WORKFLOW ='Y' where NAME='Auction Preliminary Scrutiny';
update M_TILE set IS_WORKFLOW ='Y' where NAME='Tender Approval';
update M_TILE set IS_WORKFLOW ='Y' where NAME='Auction Approval';
update M_TILE set IS_WORKFLOW ='Y' where NAME='Auction Approval';
 
 
INSERT INTO M_REFERENCE_LIST (M_REFERENCE_LIST_ID, CREATED, ISACTIVE, UPDATED, VALUE, NAME, REFERENCE_CODE, M_BPARTNER_ID, M_REFERENCE_ID) 
VALUES ('159', SYSDATE, 'Y', SYSDATE, 'OTHERS', 'Others', 'COMMENCEMENT_PERIOD_CODE', '2', '22');

alter table t_tahdr_detail add other_commencement_period VARCHAR2(255 CHAR);
commit;